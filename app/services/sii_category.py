from enum import Enum

from pydantic import BaseModel


class SIICategory(str, Enum):
    VERY_LOW = "very_low"
    LOW = "low"
    MODERATE = "moderate"
    BORDERLINE_HIGH = "borderline_high"
    HIGH = "high"

class SIICategoryInfo(BaseModel):
    category: SIICategory
    min_value: float | None = None
    max_value: float | None = None
    description: str
    emoji: str
    status: str
    clinical_meaning: str

    @property
    def range_description(self) -> str:
        if self.min_value is None:
            return f"< {self.max_value}"
        elif self.max_value is None:
            return f"> {self.min_value}"
        return f"{self.min_value}-{self.max_value}"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π SII
SII_CATEGORIES = {
    SIICategory.VERY_LOW: SIICategoryInfo(
        category=SIICategory.VERY_LOW,
        max_value=300,
        description="–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ",
        emoji="üü¢",
        status="–û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π",
        clinical_meaning="–ù–∞–∏–±–æ–ª–µ–µ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å. –í—ã—Å–æ–∫–∞—è –∏–º–º—É–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, "
        "–Ω–∏–∑–∫–∏–π –≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–æ–Ω. –ß–∞—Å—Ç–æ y –∑–¥–æ—Ä–æ–≤—ã—Ö –ª–∏—Ü."
    ),
    SIICategory.LOW: SIICategoryInfo(
        category=SIICategory.LOW,
        min_value=300,
        max_value=450,
        description="–ò–º–º—É–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω",
        emoji="üü©",
        status="–ù–∏–∑–∫–∏–π",
        clinical_meaning="–ü—Ä–∏–∑–Ω–∞–∫–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–æ—Å–ø–∞–ª–µ–Ω–∏—è –Ω–µ—Ç, —Ö–æ—Ä–æ—à–∞—è –ø—Ä–æ–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è "
        "–≥—Ä—É–ø–ø–∞ y –æ–Ω–∫–æ–ø–∞—Ü–∏–µ–Ω—Ç–æ–≤."
    ),
    SIICategory.MODERATE: SIICategoryInfo(
        category=SIICategory.MODERATE,
        min_value=450,
        max_value=600,
        description="–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –∏–º–º—É–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã",
        emoji="üü°",
        status="–£–º–µ—Ä–µ–Ω–Ω—ã–π",
        clinical_meaning="–í–æ–∑–º–æ–∂–Ω—ã —Å—É–±–∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã. –ù–µ–æ–±—Ö–æ–¥–∏–º "
        "–∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑."
    ),
    SIICategory.BORDERLINE_HIGH: SIICategoryInfo(
        category=SIICategory.BORDERLINE_HIGH,
        min_value=600,
        max_value=750,
        description="–£–º–µ—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å–ø–∞–ª–µ–Ω–∏–µ",
        emoji="üü†",
        status="–ü–æ–≥—Ä–∞–Ω–∏—á–Ω–æ-–≤—ã—Å–æ–∫–∏–π",
        clinical_meaning="–ê—Å—Å–æ—Ü–∏–∏—Ä–æ–≤–∞–Ω c –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º —Ä–∏—Å–∫–æ–º y –æ–Ω–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏ "
        "—Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏—Ö –±–æ–ª—å–Ω—ã—Ö. –ú–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä–æ–º –Ω–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞."
    ),
    SIICategory.HIGH: SIICategoryInfo(
        category=SIICategory.HIGH,
        min_value=750,
        description="–ê–∫—Ç–∏–≤–Ω–æ–µ –≤–æ—Å–ø–∞–ª–µ–Ω–∏–µ / –∏–º–º—É–Ω–Ω–æ–µ –∏—Å—Ç–æ—â–µ–Ω–∏–µ",
        emoji="üî¥",
        status="–í—ã—Å–æ–∫–∏–π",
        clinical_meaning="–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ –ª–µ—Ç–∞–ª—å–Ω–æ—Å—Ç–∏, –ø–ª–æ—Ö–æ–π –æ—Ç–≤–µ—Ç –Ω–∞ —Ö–∏–º–∏–æ—Ç–µ—Ä–∞–ø–∏—é "
        "–∏ –±—ã—Å—Ç—Ä—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–∏ –æ–Ω–∫–æ–ø—Ä–æ—Ü–µ—Å—Å–∞—Ö. –¢—Ä–µ–±—É–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞."
    )
}

def get_sii_category(sii_value: float) -> SIICategoryInfo:
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é SII –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è.
    
    Args:
        sii_value (float): –ó–Ω–∞—á–µ–Ω–∏–µ SII
        
    Returns:
        SIICategoryInfo: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è o –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ SII
    """
    category_range = [300, 450, 600, 750]

    if sii_value < category_range[0]:
        return SII_CATEGORIES[SIICategory.VERY_LOW]
    elif sii_value < category_range[1]:
        return SII_CATEGORIES[SIICategory.LOW]
    elif sii_value < category_range[2]:
        return SII_CATEGORIES[SIICategory.MODERATE]
    elif sii_value <= category_range[3]:
        return SII_CATEGORIES[SIICategory.BORDERLINE_HIGH]
    else:
        return SII_CATEGORIES[SIICategory.HIGH]
    